version: '3.9'

services:
  db:
    container_name: ftv_db
    build:
      context: ./db
      dockerfile: Dockerfile
    restart: always
    environment:
      - POSTGRES_DB=ftvwebsite
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - PGDATA:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes:
      - ./db/database-data:/var/lib/postgresql/data
    networks:
      - prod-network
      - dev-network

  visualizer:
    container_name: pgAdmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '8080:80'
    volumes:
      - ./db/pgadmin-data:/var/lib/pgadmin
    links:
      - 'db:pgsql-server'
    networks:
      - prod-network
      - dev-network

  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    container_name: ftv_api
    restart: always
    volumes:
      - type: bind
        source: ./backend/api/
        target: /app
    working_dir: /app
    depends_on:
      - db
    ports:
      - "8998:5000"
    networks:
      - dev-network

  api-prod:
    build:
      context: ./backend/api
      dockerfile: Dockerfile-prod
    container_name: ftv_api-prod
    restart: always
    volumes:
      - type: bind
        source: ./backend/api/
        target: /app
    working_dir: /app
    depends_on:
      - db
    expose:
      - 9000
    networks:
      - prod-network

  ui:
    build: ./frontend
    container_name: ftv_front
    restart: always
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      -  "8999:8080"
    networks:
      - dev-network

  ui-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    container_name: ftv_front-prod
    restart: always
    volumes:
      - type: bind
        source: ./frontend/
        target: /app
    working_dir: /app
    expose:
      - 80
    networks:
      - prod-network

  nginx:
    build: ./backend/nginx
    container_name: ftv_nginx
    restart: always
    ports:
      - "8000:8000"
      - "8001:80"
    networks:
      - prod-network

networks:
  dev-network:
    name: dev_network
    driver: bridge
  prod-network:
    name: prod_network
    driver: bridge